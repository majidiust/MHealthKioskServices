#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MKioskService
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="MHealthKiosk")]
	public partial class DatabaseDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertVisitDescribtion(VisitDescribtion instance);
    partial void UpdateVisitDescribtion(VisitDescribtion instance);
    partial void DeleteVisitDescribtion(VisitDescribtion instance);
    partial void InsertErrorLog(ErrorLog instance);
    partial void UpdateErrorLog(ErrorLog instance);
    partial void DeleteErrorLog(ErrorLog instance);
    #endregion
		
		public DatabaseDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["MHealthKioskConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<VisitDescribtion> VisitDescribtions
		{
			get
			{
				return this.GetTable<VisitDescribtion>();
			}
		}
		
		public System.Data.Linq.Table<ErrorLog> ErrorLogs
		{
			get
			{
				return this.GetTable<ErrorLog>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VisitDescribtion")]
	public partial class VisitDescribtion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _NationalityCode;
		
		private string _MobileNumber;
		
		private string _NIBPSystol;
		
		private string _NIBPDiastol;
		
		private string _RR;
		
		private string _SPO2;
		
		private System.Nullable<bool> _Confirmed;
		
		private string _GeneratedCode;
		
		private System.Nullable<System.DateTime> _ConfirmedDate;
		
		private System.Nullable<System.DateTime> _VisitDate;
		
		private string _KioskSerial;
		
		private System.Nullable<bool> _SendSMS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNationalityCodeChanging(string value);
    partial void OnNationalityCodeChanged();
    partial void OnMobileNumberChanging(string value);
    partial void OnMobileNumberChanged();
    partial void OnNIBPSystolChanging(string value);
    partial void OnNIBPSystolChanged();
    partial void OnNIBPDiastolChanging(string value);
    partial void OnNIBPDiastolChanged();
    partial void OnRRChanging(string value);
    partial void OnRRChanged();
    partial void OnSPO2Changing(string value);
    partial void OnSPO2Changed();
    partial void OnConfirmedChanging(System.Nullable<bool> value);
    partial void OnConfirmedChanged();
    partial void OnGeneratedCodeChanging(string value);
    partial void OnGeneratedCodeChanged();
    partial void OnConfirmedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnConfirmedDateChanged();
    partial void OnVisitDateChanging(System.Nullable<System.DateTime> value);
    partial void OnVisitDateChanged();
    partial void OnKioskSerialChanging(string value);
    partial void OnKioskSerialChanged();
    partial void OnSendSMSChanging(System.Nullable<bool> value);
    partial void OnSendSMSChanged();
    #endregion
		
		public VisitDescribtion()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalityCode", DbType="NVarChar(50)")]
		public string NationalityCode
		{
			get
			{
				return this._NationalityCode;
			}
			set
			{
				if ((this._NationalityCode != value))
				{
					this.OnNationalityCodeChanging(value);
					this.SendPropertyChanging();
					this._NationalityCode = value;
					this.SendPropertyChanged("NationalityCode");
					this.OnNationalityCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileNumber", DbType="NVarChar(50)")]
		public string MobileNumber
		{
			get
			{
				return this._MobileNumber;
			}
			set
			{
				if ((this._MobileNumber != value))
				{
					this.OnMobileNumberChanging(value);
					this.SendPropertyChanging();
					this._MobileNumber = value;
					this.SendPropertyChanged("MobileNumber");
					this.OnMobileNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NIBPSystol", DbType="NVarChar(50)")]
		public string NIBPSystol
		{
			get
			{
				return this._NIBPSystol;
			}
			set
			{
				if ((this._NIBPSystol != value))
				{
					this.OnNIBPSystolChanging(value);
					this.SendPropertyChanging();
					this._NIBPSystol = value;
					this.SendPropertyChanged("NIBPSystol");
					this.OnNIBPSystolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NIBPDiastol", DbType="NVarChar(50)")]
		public string NIBPDiastol
		{
			get
			{
				return this._NIBPDiastol;
			}
			set
			{
				if ((this._NIBPDiastol != value))
				{
					this.OnNIBPDiastolChanging(value);
					this.SendPropertyChanging();
					this._NIBPDiastol = value;
					this.SendPropertyChanged("NIBPDiastol");
					this.OnNIBPDiastolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RR", DbType="NVarChar(50)")]
		public string RR
		{
			get
			{
				return this._RR;
			}
			set
			{
				if ((this._RR != value))
				{
					this.OnRRChanging(value);
					this.SendPropertyChanging();
					this._RR = value;
					this.SendPropertyChanged("RR");
					this.OnRRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SPO2", DbType="NVarChar(50)")]
		public string SPO2
		{
			get
			{
				return this._SPO2;
			}
			set
			{
				if ((this._SPO2 != value))
				{
					this.OnSPO2Changing(value);
					this.SendPropertyChanging();
					this._SPO2 = value;
					this.SendPropertyChanged("SPO2");
					this.OnSPO2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Confirmed", DbType="Bit")]
		public System.Nullable<bool> Confirmed
		{
			get
			{
				return this._Confirmed;
			}
			set
			{
				if ((this._Confirmed != value))
				{
					this.OnConfirmedChanging(value);
					this.SendPropertyChanging();
					this._Confirmed = value;
					this.SendPropertyChanged("Confirmed");
					this.OnConfirmedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GeneratedCode", DbType="NVarChar(50)")]
		public string GeneratedCode
		{
			get
			{
				return this._GeneratedCode;
			}
			set
			{
				if ((this._GeneratedCode != value))
				{
					this.OnGeneratedCodeChanging(value);
					this.SendPropertyChanging();
					this._GeneratedCode = value;
					this.SendPropertyChanged("GeneratedCode");
					this.OnGeneratedCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ConfirmedDate
		{
			get
			{
				return this._ConfirmedDate;
			}
			set
			{
				if ((this._ConfirmedDate != value))
				{
					this.OnConfirmedDateChanging(value);
					this.SendPropertyChanging();
					this._ConfirmedDate = value;
					this.SendPropertyChanged("ConfirmedDate");
					this.OnConfirmedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> VisitDate
		{
			get
			{
				return this._VisitDate;
			}
			set
			{
				if ((this._VisitDate != value))
				{
					this.OnVisitDateChanging(value);
					this.SendPropertyChanging();
					this._VisitDate = value;
					this.SendPropertyChanged("VisitDate");
					this.OnVisitDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KioskSerial", DbType="NVarChar(MAX)")]
		public string KioskSerial
		{
			get
			{
				return this._KioskSerial;
			}
			set
			{
				if ((this._KioskSerial != value))
				{
					this.OnKioskSerialChanging(value);
					this.SendPropertyChanging();
					this._KioskSerial = value;
					this.SendPropertyChanged("KioskSerial");
					this.OnKioskSerialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendSMS", DbType="Bit")]
		public System.Nullable<bool> SendSMS
		{
			get
			{
				return this._SendSMS;
			}
			set
			{
				if ((this._SendSMS != value))
				{
					this.OnSendSMSChanging(value);
					this.SendPropertyChanging();
					this._SendSMS = value;
					this.SendPropertyChanged("SendSMS");
					this.OnSendSMSChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ErrorLog")]
	public partial class ErrorLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _ErrorMessage;
		
		private string _NationalityCode;
		
		private System.Nullable<System.DateTime> _ErrorDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnErrorMessageChanging(string value);
    partial void OnErrorMessageChanged();
    partial void OnNationalityCodeChanging(string value);
    partial void OnNationalityCodeChanged();
    partial void OnErrorDateChanging(System.Nullable<System.DateTime> value);
    partial void OnErrorDateChanged();
    #endregion
		
		public ErrorLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorMessage", DbType="NVarChar(MAX)")]
		public string ErrorMessage
		{
			get
			{
				return this._ErrorMessage;
			}
			set
			{
				if ((this._ErrorMessage != value))
				{
					this.OnErrorMessageChanging(value);
					this.SendPropertyChanging();
					this._ErrorMessage = value;
					this.SendPropertyChanged("ErrorMessage");
					this.OnErrorMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalityCode", DbType="NVarChar(50)")]
		public string NationalityCode
		{
			get
			{
				return this._NationalityCode;
			}
			set
			{
				if ((this._NationalityCode != value))
				{
					this.OnNationalityCodeChanging(value);
					this.SendPropertyChanging();
					this._NationalityCode = value;
					this.SendPropertyChanged("NationalityCode");
					this.OnNationalityCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ErrorDate
		{
			get
			{
				return this._ErrorDate;
			}
			set
			{
				if ((this._ErrorDate != value))
				{
					this.OnErrorDateChanging(value);
					this.SendPropertyChanging();
					this._ErrorDate = value;
					this.SendPropertyChanged("ErrorDate");
					this.OnErrorDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
